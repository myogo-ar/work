swagger: "2.0"
info:
  description: "sky-farm-api<br>現状、update丸の内での使用のみを想定している"
  version: "1.0.0"
  title: "sky-farm-api"
  termsOfService: "http://swagger.io/terms/"
host: "api.new-port.jp"
basePath: "/v1/"
tags:
- name: "guests"
  description: "客(guest)に対するリソースアクセス"
- name: "clients"
  description: "店舗に対するリソースアクセス"
- name: "products"
  description: "商品に対するリソースアクセス"

schemes:
- "https"
- "http"
paths:
  /guests:
    post:
      tags:
      - "guests"
      summary: "guest作成"
      description: "guest作成"
      operationId: "createGuest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "guestオブジェクト"
        required: true
        schema:
          $ref: "#/definitions/Guest"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
      # security:
      # - petstore_auth:
      #   - "write:guests"
      #   - "read:guests"
    put:
      tags:
      - "guests"
      summary: "guest更新"
      description: "guest作成"
      operationId: "updateGuest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "guestオブジェクト"
        required: true
        schema:
          $ref: "#/definitions/Guest"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
        405:
          description: "Validation exception"
    get:
      tags:
      - "guests"
      summary: "guest 一覧"
      description: "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
      operationId: "findGuests"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Guest"
        400:
          description: "Invalid search value"

  /guests/{id}:
    get:
      tags:
      - "guests"
      summary: "guest 参照"
      description: "IDに対応したguestを抽出"
      operationId: "showGuest"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Guest"
        400:
          description: "Invalid value"

  /clients:
    get:
      tags:
      - "clients"
      summary: "client 一覧"
      description: "店舗 一覧"
      operationId: "findClient"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Guest"
        400:
          description: "Invalid search value"

  /clients/{id}:
    get:
      tags:
      - "clients"
      summary: "client 参照"
      description: "店舗 参照"
      operationId: "showClient"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            # type: "object"
            items:
              $ref: "#/definitions/Client"
        400:
          description: "Invalid value"

  /products:
    get:
      tags:
      - "products"
      summary: "products 一覧"
      description: "products 一覧"
      operationId: "findProducts"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Guest"
        400:
          description: "Invalid search value"

  /products/{id}:
    get:
      tags:
      - "products"
      summary: "product 参照"
      description: "商品 参照"
      operationId: "showProducts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Guest"
        400:
          description: "Invalid value"

# securityDefinitions:
#   petstore_auth:
#     type: "oauth2"
#     authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
#     flow: "implicit"
#     scopes:
#       write:pets: "modify pets in your account"
#       read:pets: "read your pets"
#   api_key:
#     type: "apiKey"
#     name: "api_key"
#     in: "header"
    
# データ定義
definitions:
  Guest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      name:
        type: "string"
      phone_number:
        type: "string"
      birth_date:
        type: "string"
        format: "date"
      delivery_addresses:
        type: "array"
        items:
         $ref: "#/definitions/DeliveryAddress"
         
  DeliveryAddress:
    type: "object"
    properties:
      postal_code:
        type: "string"
      prefecture_id:
        type: "integer"
        format: "int64"
      address:
        type: "string"
 
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        
  Client:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      facility_id:
        type: "integer"
        format: "int64"
      description_html:
        type: "string"
      delivery_fee_jpy:
        type: "integer"
      free_delivery_fee_min_price_jpy:
        type: "integer"
      images:
        type: "array"
        items:
          $ref: "#/definitions/ClientImage"
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"
          
  ClientImage:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      url:
        type: "string"
      title:
        type: "string"
  
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      client_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      price_jpy:
        type: "integer"
        format: "int64"
      description:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/ProductImage"
      options:
        type: "array"
        items:
          $ref: "#/definitions/Option"
      categories:
        type: "array"
        items:
          $ref: "#/definitions/Category"
      
  ProductImage:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      url:
        type: "string"
      title:
        type: "string"
    
  Option:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      price:
        type: "integer"
    
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"